{
"Azure Cloud Service deployment": {
"prefix": "adoAzureCloudPowerShellDeployment1",
"body": [
"- task: AzureCloudPowerShellDeployment@1",
"  inputs:",
"    ConnectedServiceName: $1  # Required  # Azure Classic subscription to target for deployment.",
"    EnableAdvancedStorageOptions: ${2:false}  # Required  # Select to enable ARM storage support for this task.",
"    StorageAccount: $3  # Required when EnableAdvancedStorageOptions = false  # Storage account must exist prior to deployment.",
"    ARMConnectedServiceName: $4  # Required when EnableAdvancedStorageOptions = true  # Azure Resource Manager subscription.",
"    ARMStorageAccount: $5  # Required when EnableAdvancedStorageOptions = true  # Choose a pre-existing ARM storage account.",
"    ServiceName: $6  # Required  # Select or enter an existing cloud service name.",
"    ServiceLocation: $7  # Required  # Select a region for new service deployment.Possible options are **East US**, **East US 2**, **Central US**, **South Central US**, **West US**, **North Europe**, **West Europe** and others.",
"    CsPkg: $8  # Required  # Path of CsPkg under the default artifact directory.",
"    CsCfg: $9  # Required  # Path of CsCfg under the default artifact directory.",
"    Slot: ${10:Production}  # Required  # **Production** or **Staging**",
"    #DeploymentLabel:  # Optional  # Specifies the label name for the new deployment. If not specified, a Globally Unique Identifier (GUID) is used.",
"    #AppendDateTimeToLabel:  # Optional  # Appends current date and time to deployment label",
"    AllowUpgrade: ${11:true}  # Required  # When selected allows an upgrade to the Microsoft Azure deployment",
"    #SimultaneousUpgrade:  # Optional  # Updates all instances at once. Your cloud service will be unavailable during update.",
"    #ForceUpgrade:  # Optional  # When selected sets the upgrade to a forced upgrade, which could potentially cause loss of local data.",
"    #VerifyRoleInstanceStatus:  # Optional  # When selected then the task will wait until role instances are in ready state.",
"    #DiagnosticStorageAccountKeys:  # Optional  # Provide storage keys for diagnostics storage account in Role:Storagekey format. The diagnostics storage account name for each role will be obtained from diagnostics config file (.wadcfgx). If the .wadcfgx file for a role is not found, diagnostics extensions won’t be set for the role. If the storage account name is missing in the .wadcfgx file, the default storage account will be used for storing diagnostics results and the storage key parameters from deployment task will be ignored. It’s recommended to save <storage_account_key> as a secret variable unless there is no sensitive information in the diagnostics result for your environment. <br/><br/>For example,<br/> WebRole: &lt;WebRole_storage_account_key&gt;<br/>WorkerRole: &lt;WorkerRole_stoarge_account_key&gt;",
"    #NewServiceCustomCertificates:  # Optional  # Provide custom certificates in CertificatePfxBase64:CertificatePassword format. It’s recommended to save <certificate_password> as a secret variable. <br/><br/>For example,<br/> Certificate1: &lt;Certificate1_password&gt;<br/>Certificate2: &lt;Certificate2_password&gt;",
"    #NewServiceAdditionalArguments:  # Optional  # Pass in additional arguments while creating a brand new service. These will be passed on to `New-AzureService` cmdlet. Eg: `-Label 'MyTestService'`",
"    #NewServiceAffinityGroup:  # Optional  # While creating new service, this affinity group will be considered instead of using service location.",
"$12"
],
"description": "Deploy an Azure Cloud Service"
}
}
