{
"Service Fabric Compose deploy": {
"prefix": "adoServiceFabricComposeDeploy0",
"body": [
"- task: ServiceFabricComposeDeploy@0",
"  inputs:",
"    serviceConnectionName: $1  # Required  # Select an Azure Service Fabric service connection to be used to connect to the cluster. Choose 'Manage' to register a new service connection.",
"    composeFilePath: ${2:**/docker-compose.yml}  # Required  # Path to the compose file that is to be deployed. [Variables](https://go.microsoft.com/fwlink/?LinkID=550988) and wildcards can be used in the path.",
"    applicationName: ${3:fabric:/Application1}  # Required  # Name of the application being deployed.",
"    registryCredentials: ${4:AzureResourceManagerEndpoint} # Options: 'AzureResourceManagerEndpoint', 'ContainerRegistryEndpoint', 'UsernamePassword', 'None' # Required  # Choose if/how credentials for the docker registry will be provided.",
"    #dockerRegistryEndpointName:  # Optional  # Select a Docker registry service connection. If a certificate matching the Server Certificate Thumbprint in the Cluster Service Connection is installed on the build agent, it will be used to encrypt the password; otherwise the password will not be encrypted.",
"    azureSubscriptionEndpoint: $5  # Required when registryCredentials = AzureResourceManagerEndpoint  # Select an Azure subscription",
"    #registryUserName:  # Optional  # Username for the Docker registry",
"    #registryPassword:  # Optional  # Password for the Docker registry. If the password is not encrypted, it is recommended that you use a custom release pipeline secret variable to store it.",
"    #passwordEncrypted:  # Optional  # It is recommended to encrypt your password using [Invoke-ServiceFabricEncryptText](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-secret-management#encrypt-application-secrets). If you do not, and a certificate matching the Server Certificate Thumbprint in the Cluster Service Connection is installed on the build agent, it will be used to encrypt the password; otherwise an error will occur.",
"    #upgrade:  # Optional  # Upgrade an existing deployment rather than removing it.",
"    #deployTimeoutSec:  # Optional  # Timeout in seconds for deploying the application.",
"    #removeTimeoutSec:  # Optional  # Timeout in seconds for removing an existing application.",
"    #getStatusTimeoutSec:  # Optional  # Timeout in seconds for getting the status of an existing application.",
"$6"
],
"description": "Deploy a Docker Compose application to an Azure Service Fabric cluster"
}
}
