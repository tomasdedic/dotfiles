{
"Update Service Fabric manifests": {
"prefix": "adoServiceFabricUpdateManifests2",
"body": [
"- task: ServiceFabricUpdateManifests@2",
"  inputs:",
"    updateType: ${1:Manifest versions} # Options: 'Manifest versions', 'Docker image settings' # Required  # Specify the type of update that should be made to the manifest files. In order to use both update types, add an instance of this task to the build pipeline for each type of update to be executed.",
"    applicationPackagePath: $2  # Required  # Path to the application package. [Variables](https://go.microsoft.com/fwlink/?LinkID=550988) and wildcards can be used in the path.",
"    versionSuffix: ${3:.$(Build.BuildNumber)}  # Required  # The value used to specify the version in the manifest files. Default is .$(Build.BuildNumber).",
"    #versionBehavior: # Options: 'Append', 'Replace' # Optional  # Specify whether to append the version value to existing values in the manifest files or replace them.",
"    updateOnlyChanged: ${4:false}  # Required  # Incrementally update only the packages that have changed. Use the [deterministic compiler flag](https://go.microsoft.com/fwlink/?LinkId=808668) to ensure builds with the same inputs produce the same outputs.",
"    #pkgArtifactName:  # Optional  # The name of the artifact containing the application package for comparison.",
"    #logAllChanges:  # Optional  # Compare all files in every package and log if the file was added, removed, or if its content changed. Otherwise, compare files in a package only until the first change is found for faster performance.",
"    #compareType: # Options: 'LastSuccessful', 'Specific' # Optional  # The build for comparison.",
"    #buildNumber:  # Optional  # The build number for comparison.",
"    #overwriteExistingPkgArtifact:  # Optional  # Always download a new copy of the artifact. Otherwise use an existing copy, if present.",
"    #imageNamesPath:  # Optional  # Path to a text file that contains the names of the Docker images associated with the Service Fabric application that should be updated with digests. Each image name must be on its own line and must be in the same order as the digests in Image Digests file. If the images are created by the Service Fabric project, this file is generated as part of the Package target and its output location is controlled by the property BuiltDockerImagesFilePath.",
"    imageDigestsPath: $5  # Required when updateType = Docker image settings  # Path to a text file that contains the digest values of the Docker images associated with the Service Fabric application. This file can be output by the [Docker task](https://go.microsoft.com/fwlink/?linkid=848006) when using the push action. The file should contain lines of text in the format of 'registry/image_name@digest_value'.",
"$6"
],
"description": "Automatically update portions of application and service manifests in a packaged Azure Service Fabric application"
}
}
