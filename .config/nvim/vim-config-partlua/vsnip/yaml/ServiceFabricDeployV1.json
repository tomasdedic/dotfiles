{
"Service Fabric application deployment": {
"prefix": "adoServiceFabricDeploy1",
"body": [
"- task: ServiceFabricDeploy@1",
"  inputs:",
"    applicationPackagePath: $1  # Required  # Path to the application package that is to be deployed. [Variables](https://go.microsoft.com/fwlink/?LinkID=550988) and wildcards can be used in the path.",
"    serviceConnectionName: $2  # Required  # Select an Azure Service Fabric service connection to be used to connect to the cluster. The settings defined in this referenced service connection will override those defined in the publish profile. Choose 'Manage' to register a new service connection.",
"    #publishProfilePath:  # Optional  # Path to the publish profile file that defines the settings to use. [Variables](https://go.microsoft.com/fwlink/?LinkID=550988) and wildcards can be used in the path.",
"    #applicationParameterPath:  # Optional  # Path to the application parameters file. [Variables](https://go.microsoft.com/fwlink/?LinkID=550988) and wildcards can be used in the path. If specified, this will override the value in the publish profile.",
"    #overrideApplicationParameter:  # Optional  # Variables defined in the build or release pipeline will be matched against the 'Parameter Name' entries in the application manifest file.  Example: If your application has a parameter defined as below.  <Parameters>  <Parameter Name=\"SampleApp_PartitionCount\" Value=\"1\" />  <Parameter Name=\"SampleApp_InstanceCount\" DefaultValue=\"-1\" />  </Parameters>  and you want to change the partition count to 2, you can define a release pipeline or an environment variable \"SampleApp_PartitionCount\" and its value as \"2\".  Note: If same variables are defined in the release pipeline and in the environment, then the environment variables will supersede the release pipeline variables.",
"    #compressPackage:  # Optional  # Indicates whether the application package should be compressed before copying to the image store. If enabled, this will override the value in the publish profile.",
"    #copyPackageTimeoutSec:  # Optional  # Timeout in seconds for copying application package to image store. If specified, this will override the value in the publish profile.",
"    #registerPackageTimeoutSec:  # Optional  # Timeout in seconds for registering or un-registering application package.",
"    overwriteBehavior: ${3:SameAppTypeAndVersion} # Options: 'Always', 'Never', 'SameAppTypeAndVersion' # Required  # Overwrite Behavior: when upgrade is not configured and an Application with same name already exists in the cluster, then following actions are available => Never, Always, SameAppTypeAndVersion.    Never will not remove the existing Application. This is the default behavior.    Always will remove the existing Application even if its Application type and Version is different from the Application being created.    SameAppTypeAndVersion will remove the existing Application only if its Application type and Version is same as the Application being created.",
"    #skipUpgradeSameTypeAndVersion:  # Optional  # Indicates whether an upgrade will be skipped if the same application type and version already exists in the cluster, otherwise the upgrade fails during validation. If enabled, re-deployments are idempotent.",
"    #skipPackageValidation:  # Optional  # Indicates whether the package should be validated or not before deployment.",
"    #useDiffPackage:  # Optional  # Upgrade by using a diff package that contains only the updated application files, the updated application manifest, and the service manifest files.",
"    #overridePublishProfileSettings:  # Optional  # This will override all upgrade settings with either the values specified below or the default value if not specified.",
"    #isUpgrade:  # Optional ",
"    #unregisterUnusedVersions:  # Optional  # Indicates whether all unused versions of the application type will be removed after an upgrade.",
"    upgradeMode: ${4:Monitored} # Options: 'Monitored', 'UnmonitoredAuto', 'UnmonitoredManual' # Required ",
"    FailureAction: ${5:Rollback} # Options: 'Rollback', 'Manual' # Required ",
"    #UpgradeReplicaSetCheckTimeoutSec:  # Optional ",
"    #TimeoutSec:  # Optional ",
"    #ForceRestart:  # Optional ",
"    #HealthCheckRetryTimeoutSec:  # Optional ",
"    #HealthCheckWaitDurationSec:  # Optional ",
"    #HealthCheckStableDurationSec:  # Optional ",
"    #UpgradeDomainTimeoutSec:  # Optional ",
"    #ConsiderWarningAsError:  # Optional ",
"    #DefaultServiceTypeHealthPolicy:  # Optional ",
"    #MaxPercentUnhealthyDeployedApplications:  # Optional ",
"    #UpgradeTimeoutSec:  # Optional ",
"    #ServiceTypeHealthPolicyMap:  # Optional ",
"    #configureDockerSettings:  # Optional  # Configures the application with the specified Docker settings.",
"    registryCredentials: ${6:AzureResourceManagerEndpoint} # Options: 'AzureResourceManagerEndpoint', 'ContainerRegistryEndpoint', 'UsernamePassword' # Required  # Choose how credentials for the Docker registry will be provided.",
"    dockerRegistryEndpoint: $7  # Required when configureDockerSettings = true && registryCredentials = ContainerRegistryEndpoint  # Select a Docker registry service connection. Required for commands that need to authenticate with a registry.<br/>Note: task will try to encrypt the registry secret before transmitting it to service fabric cluster. However, it needs cluster's server certiticate to be installed on agent machine in order to do so. If certificate is not present, secret will not be encrypted.",
"    azureSubscriptionEndpoint: $8  # Required when configureDockerSettings = true && registryCredentials = AzureResourceManagerEndpoint  # Select an Azure subscription.<br/>Note: task will try to encrypt the registry secret before transmitting it to service fabric cluster. However, it needs cluster's server certiticate to be installed on agent machine in order to do so. If certificate is not present, secret will not be encrypted.",
"    #registryUserName:  # Optional  # Username for the Docker registry",
"    #registryPassword:  # Optional  # Password for the Docker registry. If the password is not encrypted, it is recommended that you use a custom release pipeline secret variable to store it.",
"    #passwordEncrypted:  # Optional  # It is recommended to encrypt your password using [Invoke-ServiceFabricEncryptText](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-secret-management#encrypt-application-secrets). If you do not, and a certificate matching the Server Certificate Thumbprint in the Cluster Service Connection is installed on the build agent, it will be used to encrypt the password; otherwise an error will occur.",
"$9"
],
"description": "Deploy an Azure Service Fabric application to a cluster"
}
}
