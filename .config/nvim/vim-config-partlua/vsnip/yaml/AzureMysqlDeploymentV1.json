{
"Azure Database for MySQL deployment": {
"prefix": "adoAzureMysqlDeployment1",
"body": [
"- task: AzureMysqlDeployment@1",
"  inputs:",
"    ConnectedServiceName: $1  # Required  # This is needed to connect to your Azure account.<br>To configure new service connection, select the Azure subscription from the list and click 'Authorize'.<br>If your subscription is not listed or if you want to use an existing Service Principal, you can setup an Azure service connection using 'Add' or 'Manage' button.",
"    ServerName: $2  # Required  # Server name of 'Azure Database for MySQL'.Example: fabrikam.mysql.database.azure.com. When you connect using MySQL Workbench, this is the same value that is used for 'Hostname' in 'Parameters'",
"    #DatabaseName:  # Optional  # The name of database, if you already have one, on which the below script is needed to be run, else the script itself can be used to create the database.",
"    SqlUsername: $3  # Required  # Azure Database for MySQL server supports native MySQL authentication. You can connect and authenticate to a server with the server's admin login. Example:  bbo1@fabrikam. When you connect using MySQL Workbench, this is the same value that is used for 'Username' in 'Parameters'.",
"    SqlPassword: $4  # Required  # Administrator password for Azure Database for MySQL. In case you don’t recall the password you can change the password from [Azure portal](https://docs.microsoft.com/en-us/azure/mysql/howto-create-manage-server-portal).<br>It can be variable defined in the pipeline. Example : $(password).<br>Also, you may mark the variable type as 'secret' to secure it.",
"    #TaskNameSelector: # Options: 'SqlTaskFile', 'InlineSqlTask' # Optional  # Select one of the options between Script File & Inline Script.",
"    SqlFile: $5  # Required when TaskNameSelector = SqlTaskFile  # Full path of the script file on the automation agent or on a UNC path accessible to the automation agent like,  /\//\//\//\/BudgetIT/\/DeployBuilds/\/script.sql. Also, predefined system variables like, $(agent.releaseDirectory) can also be used here. A file containing SQL statements can be used here.​",
"    SqlInline: $6  # Required when TaskNameSelector = InlineSqlTask  # Enter the MySQL script to execute on the Database selected above.",
"    #SqlAdditionalArguments:  # Optional  # Additional options supported by MySQL simple SQL shell.  These options will be applied when executing the given file on the Azure Database for MySQL.​<br>Example: You can change to default tab separated output format to HTML or even XML format. Or if you have problems due to insufficient memory for large result sets, use the --quick option.​",
"    IpDetectionMethod: ${7:AutoDetect} # Options: 'AutoDetect', 'IPAddressRange' # Required  # For successful execution of the task, we need to enable administrators to access the Azure Database for MySQL Server from the IP Address of the automation agent.<br>By selecting auto-detect you can automatically add firewall exception for range of possible IP Address of automation agent ​or else you can specify the range explicitly.",
"    StartIpAddress: $8  # Required when IpDetectionMethod = IPAddressRange  # The starting IP Address of the automation agent machine pool like 196.21.30.50 .",
"    EndIpAddress: $9  # Required when IpDetectionMethod = IPAddressRange  # The ending IP Address of the automation agent machine pool like 196.21.30.65 .",
"    #DeleteFirewallRule:  # Optional  # If selected, the added exception for IP addresses of the automation agent will be removed for corresponding Azure Database for MySQL.",
"$10"
],
"description": "Run your scripts and make changes to your Azure Database for MySQL"
}
}
